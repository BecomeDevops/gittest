name: Manual Deploy to Multiple Environments

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - uat

jobs:
  build:
    if: ${{ github.event.inputs.environment == 'dev' }}
    runs-on: [self-hosted, dev-runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

  deploy-dev:
    if: ${{ github.event.inputs.environment == 'dev' }}
    needs: build
    runs-on: [self-hosted, dev-runner]
    steps:
      - name: Deploy Docker container to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ec2-user@${{ secrets.EC2_DEV_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          EOF

  deploy-staging:
    if: ${{ github.event.inputs.environment == 'staging' }}
    runs-on: [self-hosted, staging-runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Docker container to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ec2-user@${{ secrets.EC2_STAGING_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          EOF

  deploy-uat:
    if: ${{ github.event.inputs.environment == 'uat' }}
    runs-on: [self-hosted, uat-runner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Docker container to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ec2-user@${{ secrets.EC2_UAT_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          EOF
